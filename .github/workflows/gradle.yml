# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

run-name: ${{github.actor}} is experimenting with github action
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: unit-test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle Wrapper
      run: ./gradlew build #-DskipTests
    - name: list current filesystem content
      run: ls -la
    # GitHub action jobs do not share their own workspace and the content, we can output some job values for subsequent jobs
    # but this time we need the artifact for the subsequent jobs, so we use upload-artifact and download-artifact action
    - name: upload the built jar
      id: upload-built-jar
      uses: actions/upload-artifact@v4
      with:
        path: build/libs/HATEOASTest-0.0.1-SNAPSHOT.jar
        if-no-files-found: error
        retention-days: 5
        overwrite: true
    - name: output the artifact ID
      run: echo 'Artifact ID is ${{ steps.upload-built-jar.outputs.artifact-id }}'

  docker-build:
    name: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: build

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: download the built jar from previous job, not repeat the build here again
      id: download-built-jar
      uses: actions/download-artifact@v4
      
    - name: output the download-path
      run: echo 'Artifact is downloaded to ${{ steps.download-built-jar.outputs.download-path }}'
    - name: extract the JAR contents with layer information
     #for more info, refer to https://spring.io/guides/topicals/spring-boot-docker
      run: java -Djarmode=layertools -jar artifact/*.jar extract
    - name: list current filesystem content
      run: ls -R

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: docker build and push image to dockerhub
      run: |
        docker build --build-arg JAR_FILE=artifact/*.jar -t littglejack/cicdlearn:1.0.0-beta .
        docker push littglejack/cicdlearn:1.0.0-beta
#    - name: Docker build using spring boot gradle plugins, not even need to write myself the Dockerfile
#      run: ./gradlew bootBuildImage --imageName=test/myapp

    # - name: Publish to GitHub Packages
    #   run: ./gradlew publish
    #   env:
    #     USERNAME: ${{ github.actor }}
    #     TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
